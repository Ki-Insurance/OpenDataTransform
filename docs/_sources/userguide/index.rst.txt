User Guide
================================================


Installing the package
---------------------------

There are two options for running the ODT - via command line or via the user interface. Both methods require a local installation of the Python package. Here is how to do it:


1. Download the Python package from `the project GitHub pages <https://github.com/OasisLMF/OpenDataTransform/>`_.

2. Install the Python package using ```pip install git+https://github.com/OasisLMF/OasisDataConverter.git```


You will require `Python <https://www.python.org/>`_ version 3.8 or higher, and `pip <https://pypi.org/project/pip/>`_ to be installed. To install Python, follow instructions at the `Python For Beginners <https://www.python.org/about/gettingstarted/>`_ page.





Configuring the transformation tool
-------------------------------------

> Setting up the config file

The configuration file points the tool to the source account, location, and reinsurance flat files (in OED or another model format). 
The configuration file should also point to the mapping files to be used in the transformation. 

Example config files and source files (AIR CEDE example) are available `here <https://github.com/OasisLMF/OEDtransform/tree/master/examples/cede_test>`_. 






Mappings
-------------

Mappings describe how columns are converted between two data formats. 

Mappings are made up of multiple mapping files that describe how convert from one format to another. These can be chained together to get from one format to another even if a direct conversion between the two does not exist.


Example mapping files for CEDE to OED conversion are `here for account files <https://github.com/OasisLMF/OEDtransform/blob/master/examples/cede_test_v3/AIR-OED-ACC_v3.yml>`_ and `here for location files <https://github.com/OasisLMF/OEDtransform/blob/master/examples/cede_test_v3/AIR-OED-LOC_v3.yml>`_.


.. toctree::
   :maxdepth: 2
   :caption: Read more on mappings...

   mapping-files.rst
   transformer-language.rst



> Setting up new mapping files


> Using existing mapping files





Executing the data transformation
---------------------------

OPTION 1 - via the Command Line Interface



Command line usage::

    Usage: converter [OPTIONS] COMMAND [ARGS]...

      Initialises the cli grouping with default options.

    Options:
      -o, --option TEXT...  Sets a configuration option, a path and value are
                            required eg -o extractor.options.foo.bar bash

      -c, --config TEXT     Path to the configuration file.
      -v, --verbose         Specifies the verbosity level, if used multiple times
                            the verbosity is increased further

      --no-color            Disables colorised output.
      --help                Show this message and exit.

    Commands:
      run          Runs the data conversion
      show-config  Prints the resolved config to the console






OPTION 2 - via the User Interface

Instructions for the user interface method of execution will be provided in January 2022.




Reporting
---------------------------
The tool reports portfolio metadata and data validation metrics to a log file, which will be stored in the same location as the config file.


> Portfolio metadata
Portfolio metadata can be reported via the configuration file and UI. This data is recorded in the log file, and summarises the portfolio that has been transformed. It includes contextual information about the contents of the file, which are not read by the tool; for example the region, line of business, and complexity of the portfolio attributes. It also records information about the data of test, analysts running the test.


> Data validation
Data validation files are .yaml files. They require the fields, operator, and any grouping required to summarise the data in both the input file and output file.

>> Setting up the data validation
To be completed.

